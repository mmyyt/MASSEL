/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2024-10-30 07:10:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.demandsurvey;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tmp2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/tmp2.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("			<div class=\"productInfo\"><!--상품 항목 추가 -->\n");
      out.write("				<div class=\"productInfoTitle\">\n");
      out.write("					<div>상품정보</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"saleProductDiv\">\n");
      out.write("					<div class=\"saleProductArea\">\n");
      out.write("						<div class=\"saleProduct\">\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						\n");
      out.write("						<div class=\"saleProductInfo\">\n");
      out.write("							<div class=\"productImg\">\n");
      out.write("								<div class=\"pImgText\">상품 이미지</div>\n");
      out.write("								<div class=\"pImg\">\n");
      out.write("									\n");
      out.write("									\n");
      out.write("								 <div class=\"productImgArea\" id=\"productImgArea\">\n");
      out.write("									상품 이미지를 등록해주세요.\n");
      out.write("								</div>\n");
      out.write("					\n");
      out.write("								<input type=\"file\" id=\"productImgFile\" name=\"productImgFile\" style=\"display:none;\"\n");
      out.write("								onchange=\"showProductImg(event)\">\n");
      out.write("									\n");
      out.write("									\n");
      out.write("									\n");
      out.write("								</div>\n");
      out.write("								\n");
      out.write("							</div>\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							<div class=\"productInputDiv\">\n");
      out.write("							\n");
      out.write("							 <div>\n");
      out.write("							 	<div class=\"label1\">상품명</div>\n");
      out.write("							 	<div><input class=\"productInput\" type=\"text\" name=\"spname\" id=\"spname\" placeholder=\"상품명을 입력해주세요\"></div>\n");
      out.write("							 </div>\n");
      out.write("							 <div>\n");
      out.write("							 	<div class=\"label2\">가격</div>\n");
      out.write("								<div><input class=\"productInput2\" type=\"text\" name=\"spprice\" id=\"spprice\" placeholder=\"가격을 입력해주세요\"></div>\n");
      out.write("							 </div>\n");
      out.write("							 <div class=\"label4\">\n");
      out.write("								 <div>\n");
      out.write("							 		<div class=\"label4stock\">재고</div>\n");
      out.write("							 		<div><input type=\"text\" id=\"stock\" name=\"stock\" class=\"stockInput\" ></div>\n");
      out.write("								 </div>\n");
      out.write("							 	<div>\n");
      out.write("							 		<div class=\"label4max\">최대구매가능개수</div>\n");
      out.write("							 		<div><input type=\"text\" id=\"maxOrderQuantity\" name=\"maxOrderQuantity\" class=\"maxInput\"></div>\n");
      out.write("								 </div>\n");
      out.write("							 </div>\n");
      out.write("							</div>\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("						</div>\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("							\n");
      out.write("<!-- 							<div class=\"addListBtn\">\n");
      out.write("	\n");
      out.write("								<button type=\"button\" id=\"addList\" class=\"addList\">상품추가</button>\n");
      out.write("							</div> -->\n");
      out.write("						</div>\n");
      out.write("							<div class=\"addListBtn\">\n");
      out.write("								<button type=\"button\" id=\"addList\" class=\"addList\">상품추가</button>\n");
      out.write("							</div>\n");
      out.write("							\n");
      out.write("<!-- 						<div class=\"label3\">\n");
      out.write("							<div class=\"label3Name\">상품명</div>\n");
      out.write("							<div class=\"label3Price\">가격</div>\n");
      out.write("						</div>	 -->\n");
      out.write("						\n");
      out.write("				\n");
      out.write("				<!--상품 리스트  -->\n");
      out.write("					<div class=\"saleProductList\" id=\"saleProductList\"></div>\n");
      out.write("						\n");
      out.write("		\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<div class=\"listComponentWrapper\">\n");
      out.write("				<div class=\"listComponent\">\n");
      out.write("				\n");
      out.write("<!-- 				<div class=\"listComponentImgDiv\">이미지 \n");
      out.write("					<div class=\"listComponentImg\">\n");
      out.write("						\n");
      out.write("					</div>\n");
      out.write("				</div> -->\n");
      out.write("				\n");
      out.write("				<div class=\"listComponentContent\"> <!-- 이름,가격,재고,최대수량  -->\n");
      out.write("					<div class=\"listComponentTop\"> <!-- 상품명, 재고 -->\n");
      out.write("						<div class=\"listComponentName\">상품명</div>\n");
      out.write("						<div class=\"listComponentStock\">재고</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"listComponentBottom\"><!-- 가격, 수량  -->\n");
      out.write("						<div class=\"listComponentPrice\">가격</div>\n");
      out.write("						<div class=\"listComponentMax\">수량</div>\n");
      out.write("					</div>\n");
      out.write("				</div> \n");
      out.write("				\n");
      out.write("				<div class=\"listComponentBtn\">\n");
      out.write("					<button class=\"editBtn\">수정</button>\n");
      out.write("					<button class=\"delBtn\">\n");
      out.write("						X\n");
      out.write("					</button> \n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/tmp2.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
