/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2024-11-09 06:44:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/Z:/_spring/MASSEL/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MASSEL/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1687163182521L));
    _jspx_dependants.put("jar:file:/Z:/_spring/MASSEL/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MASSEL/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../resources/css/userJoin.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0\" />\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<!--========================================================-->\n");
      out.write("\n");
      out.write("	<form action=\"/member/signUp\" method=\"post\" id=\"joinForm\" enctype=\"multipart/form-data\">\n");
      out.write("\n");
      out.write("		<div class=\"wrap\">\n");
      out.write("			<!--전체를 감싸는 디브  -->\n");
      out.write("\n");
      out.write("			<div class=\"div0\">\n");
      out.write("			\n");
      out.write("				<div class=\"joinTitle\">회원가입</div>\n");
      out.write("\n");
      out.write("				<hr class=\"line\">\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--======================== id ============================  -->\n");
      out.write("			<div class=\"div1\">\n");
      out.write("				<!--아이디 div  -->\n");
      out.write("				<div class=\"idText\">아이디</div>\n");
      out.write("				<div class=\"idIput\">\n");
      out.write("					<input type=\"text\" id=\"id\" name=\"id\" class=\"idArea\"\n");
      out.write("						placeholder=\"아이디를 입력해주세요.\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"idMsg\" class=\"idMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--======================= pw ===========================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div2\">\n");
      out.write("				<!-- 비밀번호 div  -->\n");
      out.write("				<div class=\"pwText\">비밀번호</div>\n");
      out.write("				<div class=\"pwInput\">\n");
      out.write("					<input type=\"password\" id=\"pw\" name=\"pw\" class=\"pwArea\"\n");
      out.write("						placeholder=\"비밀번호를 입력해주세요.\" autocomplete=\"off\"> <span\n");
      out.write("						class=\"material-symbols-outlined pwVisibility\">visibility </span>\n");
      out.write("					<span class=\"material-symbols-outlined pwVisibility_off\"\n");
      out.write("						style=\"display: none;\">visibility_off </span>\n");
      out.write("				</div>\n");
      out.write("				<p id=\"pwMsg\" class=\"pwMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--==========================pw check ========================  -->\n");
      out.write("			<div class=\"div3\">\n");
      out.write("				<!--비밀번호 확인 div  -->\n");
      out.write("				<div class=\"pwcText\">재입력</div>\n");
      out.write("				<div class=\"pwcInput\">\n");
      out.write("					<input type=\"password\" id=\"pwCheck\" class=\"pwcArea\"\n");
      out.write("						placeholder=\"비밀번호를 재입력해주세요.\" autocomplete=\"off\"> <span\n");
      out.write("						class=\"material-symbols-outlined pwcVisibility\">visibility\n");
      out.write("					</span> <span class=\"material-symbols-outlined pwcVisibility_off\"\n");
      out.write("						style=\"display: none;\">visibility_off </span>\n");
      out.write("				</div>\n");
      out.write("				<p id=\"pwCheckMsg\" class=\"pwcMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--=========================== nickname =====================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div4\">\n");
      out.write("				<!--닉네임  -->\n");
      out.write("				<div class=\"nickText\">닉네임</div>\n");
      out.write("				<div class=\"nickInput\">\n");
      out.write("					<input type=\"text\" id=\"nickname\" class=\"nickArea\" name=\"nickname\"\n");
      out.write("						placeholder=\"닉네임을 입력해주세요.\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"nicknameMsg\" class=\"nickMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--=================== userprofile =============== -->\n");
      out.write("\n");
      out.write("			<div class=\"div5\">\n");
      out.write("				<div class=\"profileText\">프로필</div>\n");
      out.write("\n");
      out.write("				<div id=\"profileImgDiv\">\n");
      out.write("					<div class=\"profileImg\" id=\"profileImg\">\n");
      out.write("						\n");
      out.write("					</div>\n");
      out.write("						<input type=\"file\" id=\"userImgFile\" name=\"userImgFile\" style=\"display:none;\"\n");
      out.write("						onchange=\"showUserImgFile(event)\">\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("			<!--div5끝  -->\n");
      out.write("\n");
      out.write("			<!--======================== email ==============================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div6\">\n");
      out.write("				<!--이메일 div  -->\n");
      out.write("				<div class=\"emailText\">이메일</div>\n");
      out.write("				<div class=\"emailInput\">\n");
      out.write("					<input type=\"text\" id=\"email\" name=\"email\" class=\"emailArea\"\n");
      out.write("						placeholder=\"이메일을 입력해주세요.\" autocomplete=\"off\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"emailMsg\" class=\"emailMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!-- ================== button =========================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div9\">\n");
      out.write("\n");
      out.write("				<button type=\"submit\" id=\"signBtn\" class=\"signBtn\"\n");
      out.write("					disabled=\"disabled\">회원가입</button>\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("		<!-- 전체를 감싸는 div끝  -->\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"/resources/js/userJoin.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
