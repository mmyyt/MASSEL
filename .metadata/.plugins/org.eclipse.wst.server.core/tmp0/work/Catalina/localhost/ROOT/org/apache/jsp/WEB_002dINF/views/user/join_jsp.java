/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-07-15 13:50:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"../resources/join.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<div class=\"nav\">\n");
      out.write("		<!--nav  -->\n");
      out.write("	</div>\n");
      out.write("	<!--========================================================-->\n");
      out.write("\n");
      out.write("	<form action=\"/member/signup\" method=\"post\">\n");
      out.write("\n");
      out.write("		<div class=\"wrap\">\n");
      out.write("			<!--전체를 감싸는 디브  -->\n");
      out.write("\n");
      out.write("			<!--======================== id ============================  -->\n");
      out.write("			<div class=\"div1\">\n");
      out.write("				<!--아이디 div  -->\n");
      out.write("				<div class=\"idText\">아이디</div>\n");
      out.write("				<div class=\"idIput\">\n");
      out.write("					<input type=\"text\" id=\"id\" name=\"id\" class=\"idArea\"\n");
      out.write("						placeholder=\"아이디를 입력해주세요.\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"idMsg\" class=\"idMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--======================= pw ===========================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div2\">\n");
      out.write("				<!-- 비밀번호 div  -->\n");
      out.write("				<div class=\"pwText\">비밀번호</div>\n");
      out.write("				<div class=\"pwInput\">\n");
      out.write("					<input type=\"text\" id=\"pw\" name=\"pw\" class=\"pwArea\"\n");
      out.write("						placeholder=\"비밀번호를 입력해주세요.\" autocomplete=\"off\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"pwMsg\" class=\"pwMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--==========================pw check ========================  -->\n");
      out.write("			<div class=\"div3\">\n");
      out.write("				<!--비밀번호 확인 div  -->\n");
      out.write("				<div class=\"pwcText\">재입력</div>\n");
      out.write("				<div class=\"pwcInput\">\n");
      out.write("					<input type=\"text\" id=\"pwCheck\" class=\"pwcArea\"\n");
      out.write("						placeholder=\"비밀번호를 재입력해주세요.\" autocomplete=\"off\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"pwCheckMsg\" class=\"pwcMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--=========================== nickname =====================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div4\">\n");
      out.write("				<!--닉네임  -->\n");
      out.write("				<div class=\"nickText\">닉네임</div>\n");
      out.write("				<div class=\"nickInput\">\n");
      out.write("					<input type=\"text\" id=\"nickname\" class=\"nickArea\" name=\"nickname\"\n");
      out.write("						placeholder=\"닉네임을 입력해주세요.\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"nicknameMsg\" class=\"nickMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!--=================== userprofile =============== -->\n");
      out.write("\n");
      out.write("			<div class=\"div4.1\">\n");
      out.write("				<div class=\"profileText\">프로필</div>\n");
      out.write("\n");
      out.write("				<div>이곳에 프로필이미지가 보입니다</div>\n");
      out.write("\n");
      out.write("				<button type=\"button\" id=\"profileModalBtn\">프로필 선택하기</button>\n");
      out.write("				<!-- <div id=\"lorem-ipsum\"></div> -->\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("			<!--div4.1끝  -->\n");
      out.write("			<!-- =======여기까지 화면에 놓을 부분============= -->\n");
      out.write("			<!-- 여기서부터 모달창  -->\n");
      out.write("\n");
      out.write("			<div id=\"modal\" class=\"modal-overlay\">\n");
      out.write("				<!--modalWrap  -->\n");
      out.write("				<div class=\"modalBody\">\n");
      out.write("					<!--modalWindow창  -->\n");
      out.write("					<div class=\"modalTitle\">\n");
      out.write("						프로필 선택하기 <span id=\"closeBtn\" class=\"material-symbols-outlined\">close\n");
      out.write("						</span>\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("					<!--프로필선택하기 글씨 끝  -->\n");
      out.write("\n");
      out.write("<!-- 					<div class=\"content\">  wrapper \n");
      out.write("						여기서부터 그림선택\n");
      out.write("												\n");
      out.write("						<div class=\"line1\">\n");
      out.write("							wrapper \n");
      out.write("							<div class=\"imgBox\"></div>\n");
      out.write("							\n");
      out.write("							<ul class=\"items\">\n");
      out.write("								<li class=\"item\">0</li>\n");
      out.write("								<li class=\"item\">1</li>\n");
      out.write("								<li class=\"item\">2</li>\n");
      out.write("								<li class=\"item\">3</li>\n");
      out.write("								<li class=\"item\">4</li>\n");
      out.write("								<li class=\"item\">5</li>\n");
      out.write("								<li class=\"item\">6</li>\n");
      out.write("								<li class=\"item\">7</li>\n");
      out.write("								<li class=\"item\">8</li>\n");
      out.write("								<li class=\"item\">9</li>\n");
      out.write("							</ul>\n");
      out.write("\n");
      out.write("						</div>\n");
      out.write("						line1\n");
      out.write("						wrapper end \n");
      out.write("		\n");
      out.write("		<div class=\"line1\">  carousel \n");
      out.write("			<div class=\"imgBox\"></div>\n");
      out.write("		\n");
      out.write("		</div> -->\n");
      out.write("\n");
      out.write("			<div class=\"wrapper\">  <!--content  -->\n");
      out.write("			<div class=\"title\" id=\"title\">원피스</div>\n");
      out.write("				<div class=\"carousel\">  <!--line  -->\n");
      out.write("					\n");
      out.write("					<div class=\"imgBox\"></div>\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				<div>나의 히어로 아카데미아</div>\n");
      out.write("				<div class=\"carousel2\">\n");
      out.write("					<div class=\"imgBox2\"></div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("					<!-- </div>그림선택 끝  -->\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			<!--======================== email ==============================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div5\">\n");
      out.write("				<!--이메일 div  -->\n");
      out.write("				<div class=\"emailText\">이메일</div>\n");
      out.write("				<div class=\"emailInput\">\n");
      out.write("					<input type=\"text\" id=\"email\" name=\"email\" class=\"emailArea\"\n");
      out.write("						placeholder=\"이메일을 입력해주세요.\" autocomplete=\"off\">\n");
      out.write("				</div>\n");
      out.write("				<button type=\"button\" id=\"emailCheckBtn\" class=\"emailBtn\"\n");
      out.write("					disabled=\"disabled\">이메일 인증</button>\n");
      out.write("				<p id=\"emailMsg\" class=\"emailMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!-- =======================email check ======================  -->\n");
      out.write("			<div class=\"div6\">\n");
      out.write("				<!--인증번호 div  -->\n");
      out.write("				<div class=\"emailcText\"></div>\n");
      out.write("				<div class=\"emailcInput\">\n");
      out.write("					<input type=\"text\" maxlength=\"7\" onkeyup=\"checkAuthNum()\"\n");
      out.write("						id=\"AuthNumInput\" class=\"emailcArea\" disabled=\"disabled\"\n");
      out.write("						placeholder=\"인증번호를 입력하세요.\" onclick=\"checkAuthNum()\">\n");
      out.write("				</div>\n");
      out.write("				<p id=\"emailCheckMsg\" class=\"emailcMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!-- ========================birth===============  -->\n");
      out.write("\n");
      out.write("			<div class=\"div7\">\n");
      out.write("				<!--생년월일 div  -->\n");
      out.write("				<div class=\"birthText\">생년월일</div>\n");
      out.write("				<div class=\"birthInput\">\n");
      out.write("					<input type=\"text\" id=\"birth\" name=\"birth\" class=\"birthArea\">\n");
      out.write("				</div>\n");
      out.write("				<p class=\"birthMsg\"></p>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("			<!-- ================== button =========================  -->\n");
      out.write("\n");
      out.write("			<div class=\"div8\">\n");
      out.write("\n");
      out.write("				<button type=\"submit\" id=\"signBtn\" class=\"signBtn\"\n");
      out.write("					disabled=\"disabled\">회원가입</button>\n");
      out.write("				<a href=\"/\"><button type=\"button\" class=\"cancleBtn\">취소하기</button></a>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("		<!-- 전체를 감싸는 div끝  -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("	<script type=\"text/javascript\" src=\"/resources/userJoinJs.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
