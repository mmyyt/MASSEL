/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2024-10-19 10:14:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.demandsurvey;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class tmp3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/css/tmp3.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"modal\" class=\"modal-overlay\">\n");
      out.write("\n");
      out.write("	<div class=\"modalBody\">\n");
      out.write("	\n");
      out.write("		<div class=\"modalTitle\">\n");
      out.write("			<div class=\"modalText\">구매하기</div>\n");
      out.write("			<div class=\"closeBtn\" id=\"closeBtn\"> X </div>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<div class=\"modalContent\">\n");
      out.write("		\n");
      out.write("			<div class=\"myProductList\">\n");
      out.write("		 	\n");
      out.write("		 	\n");
      out.write("		 	   <div class=\"listProduct\">\n");
      out.write("                <div class=\"listProductSpno\" style=\"display: none;\"></div>\n");
      out.write("                <div class=\"listProductImg\"><img src=\"\" /></div>\n");
      out.write("                <div class=\"listProductName\">상품이름</div>\n");
      out.write("                <div class=\"listProductPrice\">가격 </div>\n");
      out.write("                <div class=\"listProductCount\">개수</div>\n");
      out.write("            </div>\n");
      out.write("		 	\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<!--여기서부터 가져가면됨..!!  -->\n");
      out.write("			\n");
      out.write("			<div class=\"userInfoWrapper\"> <!-- 정보 시작!  -->\n");
      out.write("			\n");
      out.write("				<div class=\"shipmentTitle\">배송정보</div> <!--title  -->\n");
      out.write("				\n");
      out.write("				<div> <!-- 배송방법/주문자 적는 공간  -->\n");
      out.write("				\n");
      out.write("					<div class=\"shipmentMethodDiv\"><!--배송방법  -->\n");
      out.write("						<div class=\"shipmentMethodText\">배송방법</div>\n");
      out.write("						<!-- <select class=\"shipmentMethodInput\">배송방법을 선택해주세요</select> -->\n");
      out.write("						<input type=\"radio\">\n");
      out.write("					</div><!--배송방법  -->\n");
      out.write("				\n");
      out.write("					<div class=\"ordererNameDiv\"> <!--주문자이름  -->\n");
      out.write("						<div class=\"ordererNameText\">주문자명</div>\n");
      out.write("						<div class=\"ordererNameInput\"><input type=\"text\"></div>\n");
      out.write("					</div> <!--주문자이름  -->\n");
      out.write("					\n");
      out.write("					<div class=\"ordererPhoneDiv\"> <!--주문자연락처  -->\n");
      out.write("						<div class=\"ordererPhoneText\">주문자 연락처</div>\n");
      out.write("						<div class=\"ordererPhoneInput\"><input type=\"text\"></div>\n");
      out.write("					</div><!--주문자연락처  -->\n");
      out.write("					\n");
      out.write("					<div class=\"ordererEmailDiv\"><!--주문자이메일  -->\n");
      out.write("						<div class=\"ordererEmailText\">주문자 이메일</div>\n");
      out.write("						<div class=\"ordererEmailInput\"><input type=\"text\" name=\"email\" class=\"emailAddress\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ses.email }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></div>\n");
      out.write("					</div><!--주문자이메일  -->\n");
      out.write("								\n");
      out.write("				</div><!-- 배송방법/주문자 적는 공간  -->\n");
      out.write("				\n");
      out.write("				<div> <!-- 수령인 정보 적는 공간 -->\n");
      out.write("				\n");
      out.write("					<div class=\"recipientNameDiv\"> <!--수령인 이름  -->\n");
      out.write("						<div class=\"recipientNameText\">수령인 이름</div>\n");
      out.write("						<div class=\"recipientNameInput\"><input type=\"text\"></div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"recipientPhoneDiv\"> <!--수령인 폰버노  -->\n");
      out.write("						<div class=\"recipientPhoneText\">수령인 연락처</div>\n");
      out.write("						<div class=\"recipientPhoneInput\"><input type=\"text\"></div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"postalCodeDiv\"> <!--우편번호  -->\n");
      out.write("						<div class=\"postalCodeText\">우편번호</div>\n");
      out.write("						<div class=\"postalCodeInput\"><input type=\"text\"></div>\n");
      out.write("						<div class=\"postalCodeBtn\"><button>우편번호찾기</button></div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"addressDiv\"> <!--주소/상세  -->\n");
      out.write("						<div class=\"addressText\">주소</div>\n");
      out.write("						    <div class=\"addressInputs\">\n");
      out.write("        						<div class=\"addresesInput\"><input type=\"text\" placeholder=\"주소 입력\"></div>\n");
      out.write("        						<div class=\"addressDetailInput\"><input type=\"text\" placeholder=\"상세 주소 입력\"></div>\n");
      out.write("    						</div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"shipmentNoteDiv\"> <!--배송관련메모  -->\n");
      out.write("						<div>배송관련메모</div>\n");
      out.write("						<div class=\"shipmentNoteDivInput\"><textarea rows=\"\" cols=\"\"></textarea></div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("				\n");
      out.write("				</div><!-- 수령인 정보 -->\n");
      out.write("	\n");
      out.write("				<div class=\"refundTitle\">환불 정보</div>\n");
      out.write("				<div> <!-- 환붋정보 -->\n");
      out.write("				\n");
      out.write("					<div class=\"refundBankDiv\"> <!--환불은행  -->\n");
      out.write("						<div class=\"refundBankName\">은행이름</div>\n");
      out.write("						<div class=\"refundBankInput\"><input type=\"text\"></div>\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					<div class=\"refundAccountDiv\"><!--계좌번호  -->\n");
      out.write("						<div class=\"refundAccountText\">계좌</div>\n");
      out.write("						<div class=\"refundAccountInput\"><input type=\"text\"></div>\n");
      out.write("					</div>\n");
      out.write("						\n");
      out.write("					<div class=\"refundAccountHolderDiv\"><!--옉금주  -->\n");
      out.write("						<div class=\"refundAccountHolderText\">예금주</div>\n");
      out.write("						<div class=\"refundAccountHolderInput\"><input type=\"text\"></div>\n");
      out.write("					</div>				\n");
      out.write("					\n");
      out.write("				\n");
      out.write("				</div><!--환불  -->\n");
      out.write("\n");
      out.write("			\n");
      out.write("			</div> <!-- 배송정보 끝  -->\n");
      out.write("			\n");
      out.write("			<div> <!-- 최중금액보여주는 부분  --> \n");
      out.write("				<div class=\"totalPriceTitle\">최종주문금액</div>\n");
      out.write("				\n");
      out.write("				<div class=\"totalProductPriceDiv\">\n");
      out.write("					<div class=\"totalProductPriceText\">상품금액</div>\n");
      out.write("					<div class=\"totalProductPriceContent\">1000원</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"shipmentPriceDiv\">\n");
      out.write("					<div>배송비</div>\n");
      out.write("					<div>2000원</div>\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("				<div class=\"totalPriceDiv\">\n");
      out.write("					<div>최종금액</div>\n");
      out.write("					<div>3억원</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<div>\n");
      out.write("				<button type=\"button\" class=\"participationBtn\">참여하기</button>\n");
      out.write("				<button type=\"button\" onclick =\"check()\">모든것을체크</button>\n");
      out.write("			</div>\n");
      out.write("		</div><!--modalcontent  -->\n");
      out.write("		\n");
      out.write("		\n");
      out.write("	</div> <!--modalbody  -->\n");
      out.write("	\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- <script type=\"text/javascript\" src=\"/resources/js/tmp3.js\"></script> -->\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
